name: Integration tests

on: [push]

jobs:

  build:

    env:
      PIPENV_VENV_IN_PROJECT: 1

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [windows-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pipenv
        run: pip install pipenv

      - name: Pipenv venv cache
        uses: actions/cache@v1
        id: cache-venv
        with:
          path: .venv
          key: ${{ runner.os }}-${{ matrix.python-version }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Create environment and install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: pipenv sync --dev

      - name: Integration tests
        run: pipenv run pytest --no-cov tests/integration_tests
